// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: order.proto

package order

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 子单下发绩效平台接口
type ChildOrderPerf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"fixed32,1,opt,name=Id,proto3" json:"Id,omitempty"`                          // uint32  子单号
	AlgoOrderId    uint32 `protobuf:"fixed32,2,opt,name=AlgoOrderId,proto3" json:"AlgoOrderId,omitempty"`        // uint32   母单号
	AlgorithmType  uint32 `protobuf:"fixed32,3,opt,name=AlgorithmType,proto3" json:"AlgorithmType,omitempty"`    // -->uint16 算法类型
	AlgorithmId    uint32 `protobuf:"fixed32,4,opt,name=AlgorithmId,proto3" json:"AlgorithmId,omitempty"`        // -->uint16 算法ID
	USecurityId    uint32 `protobuf:"fixed32,5,opt,name=USecurityId,proto3" json:"USecurityId,omitempty"`        // uint32 证券ID
	SecurityId     string `protobuf:"bytes,6,opt,name=SecurityId,proto3" json:"SecurityId,omitempty"`            // -->char[8] 证券代码
	OrderQty       uint64 `protobuf:"fixed64,7,opt,name=OrderQty,proto3" json:"OrderQty,omitempty"`              // uint64 委托数量
	Price          uint64 `protobuf:"fixed64,8,opt,name=Price,proto3" json:"Price,omitempty"`                    // uint64 委托价格
	OrderType      uint32 `protobuf:"fixed32,9,opt,name=OrderType,proto3" json:"OrderType,omitempty"`            // -->uint8 订单类型
	CumQty         uint64 `protobuf:"fixed64,10,opt,name=CumQty,proto3" json:"CumQty,omitempty"`                 // uint64 总成交数量
	LastPx         uint64 `protobuf:"fixed64,11,opt,name=LastPx,proto3" json:"LastPx,omitempty"`                 // uint64 成交金额
	LastQty        uint64 `protobuf:"fixed64,12,opt,name=LastQty,proto3" json:"LastQty,omitempty"`               // uint64 成交数量
	ArrivedPrice   uint64 `protobuf:"fixed64,13,opt,name=ArrivedPrice,proto3" json:"ArrivedPrice,omitempty"`     // uint64 到达价格
	ChildOrdStatus uint32 `protobuf:"fixed32,14,opt,name=ChildOrdStatus,proto3" json:"ChildOrdStatus,omitempty"` // -->uint8 子订单状态
	TransactTime   uint64 `protobuf:"fixed64,15,opt,name=TransactTime,proto3" json:"TransactTime,omitempty"`     // uint64 交易时间
}

func (x *ChildOrderPerf) Reset() {
	*x = ChildOrderPerf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildOrderPerf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildOrderPerf) ProtoMessage() {}

func (x *ChildOrderPerf) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildOrderPerf.ProtoReflect.Descriptor instead.
func (*ChildOrderPerf) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

func (x *ChildOrderPerf) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChildOrderPerf) GetAlgoOrderId() uint32 {
	if x != nil {
		return x.AlgoOrderId
	}
	return 0
}

func (x *ChildOrderPerf) GetAlgorithmType() uint32 {
	if x != nil {
		return x.AlgorithmType
	}
	return 0
}

func (x *ChildOrderPerf) GetAlgorithmId() uint32 {
	if x != nil {
		return x.AlgorithmId
	}
	return 0
}

func (x *ChildOrderPerf) GetUSecurityId() uint32 {
	if x != nil {
		return x.USecurityId
	}
	return 0
}

func (x *ChildOrderPerf) GetSecurityId() string {
	if x != nil {
		return x.SecurityId
	}
	return ""
}

func (x *ChildOrderPerf) GetOrderQty() uint64 {
	if x != nil {
		return x.OrderQty
	}
	return 0
}

func (x *ChildOrderPerf) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ChildOrderPerf) GetOrderType() uint32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *ChildOrderPerf) GetCumQty() uint64 {
	if x != nil {
		return x.CumQty
	}
	return 0
}

func (x *ChildOrderPerf) GetLastPx() uint64 {
	if x != nil {
		return x.LastPx
	}
	return 0
}

func (x *ChildOrderPerf) GetLastQty() uint64 {
	if x != nil {
		return x.LastQty
	}
	return 0
}

func (x *ChildOrderPerf) GetArrivedPrice() uint64 {
	if x != nil {
		return x.ArrivedPrice
	}
	return 0
}

func (x *ChildOrderPerf) GetChildOrdStatus() uint32 {
	if x != nil {
		return x.ChildOrdStatus
	}
	return 0
}

func (x *ChildOrderPerf) GetTransactTime() uint64 {
	if x != nil {
		return x.TransactTime
	}
	return 0
}

// 母单下发绩效平台接口
type AlgoOrderPerf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"fixed32,1,opt,name=Id,proto3" json:"Id,omitempty"`                       // uint32   母单ID
	AlgorithmType uint32 `protobuf:"fixed32,2,opt,name=AlgorithmType,proto3" json:"AlgorithmType,omitempty"` // -->uint16 算法类型
	AlgorithmId   uint32 `protobuf:"fixed32,3,opt,name=AlgorithmId,proto3" json:"AlgorithmId,omitempty"`     // -->uint16 算法ID
	USecurityId   uint32 `protobuf:"fixed32,4,opt,name=USecurityId,proto3" json:"USecurityId,omitempty"`     // uint32 证券ID
	SecurityId    string `protobuf:"bytes,5,opt,name=SecurityId,proto3" json:"SecurityId,omitempty"`         // char[8] 证券代码
	AlgoOrderQty  uint64 `protobuf:"fixed64,6,opt,name=AlgoOrderQty,proto3" json:"AlgoOrderQty,omitempty"`   // uint64 母单数量
	TransactTime  uint64 `protobuf:"fixed64,7,opt,name=TransactTime,proto3" json:"TransactTime,omitempty"`   // uint64 交易时间
}

func (x *AlgoOrderPerf) Reset() {
	*x = AlgoOrderPerf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlgoOrderPerf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlgoOrderPerf) ProtoMessage() {}

func (x *AlgoOrderPerf) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlgoOrderPerf.ProtoReflect.Descriptor instead.
func (*AlgoOrderPerf) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

func (x *AlgoOrderPerf) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlgoOrderPerf) GetAlgorithmType() uint32 {
	if x != nil {
		return x.AlgorithmType
	}
	return 0
}

func (x *AlgoOrderPerf) GetAlgorithmId() uint32 {
	if x != nil {
		return x.AlgorithmId
	}
	return 0
}

func (x *AlgoOrderPerf) GetUSecurityId() uint32 {
	if x != nil {
		return x.USecurityId
	}
	return 0
}

func (x *AlgoOrderPerf) GetSecurityId() string {
	if x != nil {
		return x.SecurityId
	}
	return ""
}

func (x *AlgoOrderPerf) GetAlgoOrderQty() uint64 {
	if x != nil {
		return x.AlgoOrderQty
	}
	return 0
}

func (x *AlgoOrderPerf) GetTransactTime() uint64 {
	if x != nil {
		return x.TransactTime
	}
	return 0
}

var File_order_proto protoreflect.FileDescriptor

var file_order_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0xd6, 0x03, 0x0a, 0x0e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x65, 0x72, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x6c, 0x67, 0x6f, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0b, 0x41, 0x6c,
	0x67, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07,
	0x52, 0x0d, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x07, 0x52, 0x0b, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0b, 0x55, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x75, 0x6d, 0x51, 0x74, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x06, 0x43, 0x75, 0x6d, 0x51, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4c,
	0x61, 0x73, 0x74, 0x50, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x4c, 0x61, 0x73,
	0x74, 0x50, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x61, 0x73, 0x74, 0x51, 0x74, 0x79, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x4c, 0x61, 0x73, 0x74, 0x51, 0x74, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0c, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0e, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x4f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf1, 0x01,
	0x0a, 0x0d, 0x41, 0x6c, 0x67, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x65, 0x72, 0x66, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0d, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0b, 0x41, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0b, 0x55, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x6c, 0x67,
	0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0c, 0x41, 0x6c, 0x67, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x74, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_proto_rawDescOnce sync.Once
	file_order_proto_rawDescData = file_order_proto_rawDesc
)

func file_order_proto_rawDescGZIP() []byte {
	file_order_proto_rawDescOnce.Do(func() {
		file_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_proto_rawDescData)
	})
	return file_order_proto_rawDescData
}

var file_order_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_order_proto_goTypes = []interface{}{
	(*ChildOrderPerf)(nil), // 0: order.ChildOrderPerf
	(*AlgoOrderPerf)(nil),  // 1: order.AlgoOrderPerf
}
var file_order_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_order_proto_init() }
func file_order_proto_init() {
	if File_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildOrderPerf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlgoOrderPerf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_order_proto_goTypes,
		DependencyIndexes: file_order_proto_depIdxs,
		MessageInfos:      file_order_proto_msgTypes,
	}.Build()
	File_order_proto = out.File
	file_order_proto_rawDesc = nil
	file_order_proto_goTypes = nil
	file_order_proto_depIdxs = nil
}
