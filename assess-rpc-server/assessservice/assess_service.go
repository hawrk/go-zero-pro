// Code generated by goctl. DO NOT EDIT!
// Source: assess.proto

package assessservice

import (
	"context"

	"algo_assess/assess-rpc-server/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AssessInfo = proto.AssessInfo
	GeneralReq = proto.GeneralReq
	GeneralRsp = proto.GeneralRsp

	AssessService interface {
		//  获取绩效概况
		GetGeneral(ctx context.Context, in *GeneralReq, opts ...grpc.CallOption) (*GeneralRsp, error)
	}

	defaultAssessService struct {
		cli zrpc.Client
	}
)

func NewAssessService(cli zrpc.Client) AssessService {
	return &defaultAssessService{
		cli: cli,
	}
}

//  获取绩效概况
func (m *defaultAssessService) GetGeneral(ctx context.Context, in *GeneralReq, opts ...grpc.CallOption) (*GeneralRsp, error) {
	client := proto.NewAssessServiceClient(m.cli.Conn())
	return client.GetGeneral(ctx, in, opts...)
}
