// Code generated by goctl. DO NOT EDIT!
// Source: market.proto

package marketservice

import (
	"context"

	"algo_assess/market-mq-server/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LevelInfo = proto.LevelInfo
	MarkReq   = proto.MarkReq
	MarkRsp   = proto.MarkRsp

	MarketService interface {
		//  获取行情价格数量信息
		GetMarketInfo(ctx context.Context, in *MarkReq, opts ...grpc.CallOption) (*MarkRsp, error)
	}

	defaultMarketService struct {
		cli zrpc.Client
	}
)

func NewMarketService(cli zrpc.Client) MarketService {
	return &defaultMarketService{
		cli: cli,
	}
}

//  获取行情价格数量信息
func (m *defaultMarketService) GetMarketInfo(ctx context.Context, in *MarkReq, opts ...grpc.CallOption) (*MarkRsp, error) {
	client := proto.NewMarketServiceClient(m.cli.Conn())
	return client.GetMarketInfo(ctx, in, opts...)
}
