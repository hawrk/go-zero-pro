// Code generated by goctl. DO NOT EDIT!
// Source: mornano.proto

package server

import (
	"context"

	"algo_assess/mornano-rpc-server/internal/logic"
	"algo_assess/mornano-rpc-server/internal/svc"
	"algo_assess/mornano-rpc-server/proto"
)

type MornanoServiceServer struct {
	svcCtx *svc.ServiceContext
	proto.UnimplementedMornanoServiceServer
}

func NewMornanoServiceServer(svcCtx *svc.ServiceContext) *MornanoServiceServer {
	return &MornanoServiceServer{
		svcCtx: svcCtx,
	}
}

//  算法选择框数据
func (s *MornanoServiceServer) GetAlgoChooseList(ctx context.Context, in *proto.AlgoChooseReq) (*proto.AlgoChooseRsp, error) {
	l := logic.NewGetAlgoChooseListLogic(ctx, s.svcCtx)
	return l.GetAlgoChooseList(in)
}

//  登陆校验   --原则上只返回密码和角色
func (s *MornanoServiceServer) LoginCheck(ctx context.Context, in *proto.LoginReq) (*proto.LoginRsp, error) {
	l := logic.NewLoginCheckLogic(ctx, s.svcCtx)
	return l.LoginCheck(in)
}

//  查询算法基础信息
func (s *MornanoServiceServer) GetAlgoInfo(ctx context.Context, in *proto.AlgoInfoReq) (*proto.AlgoInfoRsp, error) {
	l := logic.NewGetAlgoInfoLogic(ctx, s.svcCtx)
	return l.GetAlgoInfo(in)
}

//  查询用户资金和证券持仓信息  (用户画像)
func (s *MornanoServiceServer) GetUserCapital(ctx context.Context, in *proto.CapitalReq) (*proto.CapitailRsp, error) {
	l := logic.NewGetUserCapitalLogic(ctx, s.svcCtx)
	return l.GetUserCapital(in)
}
