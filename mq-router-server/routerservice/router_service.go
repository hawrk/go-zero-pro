// Code generated by goctl. DO NOT EDIT!
// Source: router.proto

package routerservice

import (
	"context"

	"algo_assess/mq-router-server/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	RouterReq = ordproto.RouterReq
	RouterRsp = ordproto.RouterRsp

	RouterService interface {
		//  proto
		GetRouter(ctx context.Context, in *RouterReq, opts ...grpc.CallOption) (*RouterRsp, error)
	}

	defaultRouterService struct {
		cli zrpc.Client
	}
)

func NewRouterService(cli zrpc.Client) RouterService {
	return &defaultRouterService{
		cli: cli,
	}
}

//  proto
func (m *defaultRouterService) GetRouter(ctx context.Context, in *RouterReq, opts ...grpc.CallOption) (*RouterRsp, error) {
	client := ordproto.NewRouterServiceClient(m.cli.Conn())
	return client.GetRouter(ctx, in, opts...)
}
